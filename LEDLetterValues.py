### TODO: Add numbers, lowercase letters, and punctuation

toLED = {'A' :[
		[0,1,1,1,0],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,1,1,1,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1]
		], 
	 'B' : [
		[1,1,1,1,0],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,1,1,1,0],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,1,1,1,0]
		],
	 'C' :[
		[0,1,1,1,0],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,0],
		[1,0,0,0,0],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[0,1,1,1,0]
		] ,
	 'D' :[
		[1,1,1,0,0],
		[1,0,0,1,0],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,1,0],
		[1,1,1,0,0]
		],
	 'E' :[
		[1,1,1,1,1],
		[1,0,0,0,0],
		[1,0,0,0,0],
		[1,1,1,1,0],
		[1,0,0,0,0],
		[1,0,0,0,0],
		[1,0,0,0,0],
		[1,1,1,1,1]
		],
	 'G' : [
		[0,1,1,1,0],
		[0,1,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,0],
		[1,0,1,1,1],
		[1,0,0,0,1],
		[0,0,0,0,1],
		[0,1,1,1,0]
		],
	 'H' : [
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,1,1,1,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1]
		],
	 'I' : [
		[1,1,1,1,1],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[1,1,1,1,1]
		],
	 'J' : [
		[1,1,1,1,1],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[1,0,1,0,0],
		[1,0,1,0,0],
		[0,1,0,0,0]
		],
	 'K' : [
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,1,0],
		[1,0,1,0,0],
		[1,1,0,0,0],
		[1,0,1,0,0],
		[1,0,0,1,0],
		[1,0,0,0,1]
		],
	 'L' : [
		[1,0,0,0,0],
		[1,0,0,0,0],
		[1,0,0,0,0],
		[1,0,0,0,0],
		[1,0,0,0,0],
		[1,0,0,0,0],
		[1,0,0,0,0],
		[1,1,1,1,1]
		],
	 'M' : [
		[1,0,0,0,1],
		[1,1,0,1,1],
		[1,0,1,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1]
		],
	 'N' : [
		[1,0,0,0,1],
		[1,1,0,0,1],
		[1,0,1,0,1],
		[1,0,1,0,1],
		[1,0,1,0,1],
		[1,0,1,0,1],
		[1,0,0,1,1],
		[1,0,0,0,1]
		],
	 'O' : [
		[0,1,1,1,0],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[0,1,1,1,0]
		],
	 'P' : [
		[1,1,1,1,0],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,1,1,1,0],
		[1,0,0,0,0],
		[1,0,0,0,0],
		[1,0,0,0,0],
		[1,0,0,0,0]
		],
	 'Q' : [
		[0,1,1,0,0],
		[1,0,0,1,0],
		[1,0,0,1,0],
		[1,0,0,1,0],
		[1,0,0,1,0],
		[1,0,1,1,0],
		[1,0,1,1,0],
		[1,1,0,0,1]
		],
	 'R' : [
		[1,1,1,1,0],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,1,1,1,0],
		[1,1,0,0,0],
		[1,0,1,0,0],
		[1,0,0,1,0],
		[1,0,0,0,1]
		],
	 'S' : [
		[0,1,1,1,0],
		[1,0,0,0,1],
		[1,0,0,0,0],
		[0,1,1,1,0],
		[0,0,0,0,1],
		[0,0,0,0,1],
		[1,0,0,0,1],
		[0,1,1,1,0]
		],
	 'T' :[
		[1,1,1,1,1],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0]
		],
	 'U' :[
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[0,1,1,1,0]
		],
	 'V':[
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[0,1,0,1,0],
		[0,1,0,1,0],
		[0,1,0,1,0],
		[0,0,1,0,0]
		],
	 'W':[
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,0,0,1],
		[1,0,1,0,1],
		[1,1,0,1,1],
		[1,0,0,0,1]
		],
	 'X':[
		[1,0,0,0,1],
		[1,0,0,0,1],
		[0,1,0,1,0],
		[0,1,0,1,0],
		[0,1,1,1,0],
		[0,1,0,1,0],
		[1,0,0,0,1],
		[1,0,0,0,1]
		],
	 'Y':[
		[1,0,0,0,1],
		[0,1,0,1,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0]
		],
	 'Z':[
		[1,1,1,1,1],
		[0,0,0,1,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,0,1,0,0],
		[0,1,0,0,0],
		[1,1,1,1,1]
		],
	 ' ':[
		[0,0,0,0,0],
		[0,0,0,0,0],
		[0,0,0,0,0],
		[0,0,0,0,0],
		[0,0,0,0,0],
		[0,0,0,0,0],
		[0,0,0,0,0],
		[0,0,0,0,0]
		],
	 '':[
		[1,1,1,1,1],
		[1,1,1,1,1],
		[1,1,1,1,1],
		[1,1,1,1,1],
		[1,1,1,1,1],
		[1,1,1,1,1],
		[1,1,1,1,1],
		[1,1,1,1,1]
		]
	 }

def getLetter(char, fallback=None):
        """If a valid custom fallback is not supplied and the
        requested character cannot be found, a full block character
        will be used instead."""
        if fallback and toLED.get(fallback, None):
                fallback = toLED[fallback]
        else:
                fallback = toLED['']
        return toLED.get(char, fallback)

def textToArray(text):
	phrase = []
	for x in text:
		phrase.append(getLetter(x))
	phrase += toLED[' '] + toLED[' ']
	return phrase

def textTo2D(text):
	phrase = [[] for i in range(8)]
	text += "  " + text
	for x in text:
		for i, v in enumerate(getLetter(x)):
			phrase[i] += v
		for i in phrase:
			i.append(0)
	return phrase
